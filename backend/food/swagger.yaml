swagger: "2.0"
info:
  description: Access to food tracker service
  version: "1.0.0"
  title: Food tracker API
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api/v1"

# Paths supported by the server application
paths:
  /products:
    get:
      operationId: food.rest_api.get_products
      tags:
        - Product
      summary: "The product data structure supported by the server application"
      description: "Read the list of products"
      responses:
        200:
          description: "Successful read product list"
          schema:
            type: object
            required:
              - data
            properties:
              data:
                description: the list of products
                type: array
                items:
                  $ref: '#/definitions/Product'
              pagination:
                description: pagination information
                $ref: '#/definitions/Pagination'

  /energy/calculate:
    get:
      operationId: food.rest_api.calculate_energy
      tags:
        - energy
      parameters:
        - name: fats
          in: query
          description: fats [g] per 100g
          type: number
          minimum: 0
          default: 0
        - name: carbs
          in: query
          description: carbs [g] per 100g
          type: number
          minimum: 0
          default: 0
        - name: proteins
          in: query
          description: proteins [g] per 100g
          type: number
          minimum: 0
          default: 0
        - name: multiplier
          in: query
          description: multiplier to scale the 100g reference
          type: number
          minimum: 0
          default: 1.0
      responses:
        200:
          description: Successful get calories of the serving
          schema:
            required:
              - data
            properties:
              data:
                type: object
                properties:
                  calories:
                    description: calories [kcal]
                    $ref: '#/definitions/Macros'
                  serving:
                    description: serving size [g]
                    $ref: '#/definitions/Macros'

definitions:
  Macros:
    type: object
    description: ficken
    required:
      - fats
      - carbs
      - proteins
    properties:
      fats:
        type: number
        description: amount of fats. the measure, i.e. [g] or [kcal], depends on context
        example: 123
      carbs:
        type: number
        description: amount of carbs. the measure, i.e. [g] or [kcal], depends on context
        example: 123
      proteins:
        type: number
        description: amount of proteins. the measure, i.e. [g] or [kcal], depends on context
        example: 123

  Product:
    type: object
    required:
      - uuid
    properties:
      uuid:
        type: string
        example: "5f9e2e63-ad66-4a33-8228-638a49a5c06f"
      name:
        type: string
        example: "ei"
      kcal:
        description: total calories per 100g as provided by producer
        type: number
        example: 256
      tags:
        description: tags such as selling store, manufacturer, ...
        type: string
        example: "aldi, milbona"
      macros:
        description: size distribution among macros [g]
        $ref: '#/definitions/Macros'
      calories:
        description: calorie distribution among macros [kcal]
        $ref: '#/definitions/Macros'

  Pagination:
    type: object
    properties:
      offset:
        type: integer
        example: 0
      limit:
        type: integer
        example: 100
      total:
        type: integer
        example: 1234
